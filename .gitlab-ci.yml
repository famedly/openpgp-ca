# SPDX-FileCopyrightText: 2019-2020 Heiko Schaefer <heiko@schaefer.name>
# SPDX-License-Identifier: CC0-1.0

image: rust:latest

#cache:
#  paths:
#    - cargo/registry
#    - cargo/git

reuse:
  image:
    name: fsfe/reuse:latest
    entrypoint: [""]
  script:
    - reuse lint

cargo-test:
  stage: test
  before_script:
    - mkdir -p /run/user/$UID
    - apt update -y -qq
    - apt install -y -qq --no-install-recommends  git rustc cargo clang make pkg-config nettle-dev libssl-dev capnproto libsqlite3-dev ca-certificates valgrind strace python3-dev python3-setuptools python3-cffi python3-pytest gnupg libpcsclite-dev
    - apt clean
  script:
  - cargo test

cargo-fmt:
  script:
    - rustup component add rustfmt
    - cargo fmt -- --check

cargo-clippy:
  before_script:
    - mkdir -p /run/user/$UID
    - apt update -y -qq
    - apt install -y -qq --no-install-recommends  git rustc cargo clang make pkg-config nettle-dev libssl-dev capnproto libsqlite3-dev ca-certificates valgrind strace python3-dev python3-setuptools python3-cffi python3-pytest gnupg libpcsclite-dev
    - apt clean
  script:
    - rustup component add clippy
    - cargo clippy --verbose --tests -- -D warnings

pages:
  image: alpine:latest
  stage: test
  script:
    - echo 'pages'
  artifacts:
    paths:
      - public
  only:
    - main

build_docker:
  stage: deploy
  image: docker:stable

  variables:
    IMAGE_LATEST: $CI_REGISTRY_IMAGE:latest
    IMAGE_SHA: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  services:
      - docker:stable-dind
  before_script:
    - docker info
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker pull $IMAGE_LATEST || true
    - docker build --cache-from $IMAGE_LATEST --target openpgp-ca -t $IMAGE_SHA -t $IMAGE_LATEST .
    - docker push $IMAGE_SHA
    - docker push $IMAGE_LATEST
  needs: []

build_docker_restd:
  stage: deploy
  image: docker:stable

  variables:
    IMAGE_LATEST: $CI_REGISTRY_IMAGE/openpgp-ca-restd:latest
    IMAGE_SHA: $CI_REGISTRY_IMAGE/openpgp-ca-restd:$CI_COMMIT_SHA
  services:
    - docker:stable-dind
  before_script:
    - docker info
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker pull $IMAGE_LATEST || true
    - docker build --cache-from $IMAGE_LATEST --target openpgp-ca-restd -t $IMAGE_SHA -t $IMAGE_LATEST .
    - docker push $IMAGE_SHA
    - docker push $IMAGE_LATEST
  needs: []
