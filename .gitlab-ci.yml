# SPDX-FileCopyrightText: 2019-2020 Heiko Schaefer <heiko@schaefer.name>
# SPDX-License-Identifier: CC0-1.0

image: rust:latest

#cache:
#  paths:
#    - cargo/registry
#    - cargo/git

reuse:
  image:
    name: fsfe/reuse:latest
    entrypoint: [""]
  script:
    - reuse lint

cargo-test:
  stage: test
  before_script:
    - mkdir -p /run/user/$UID
    - apt update -y -qq
    - apt install -y -qq --no-install-recommends  git rustc cargo clang make pkg-config nettle-dev libssl-dev capnproto libsqlite3-dev ca-certificates valgrind strace python3-dev python3-setuptools python3-cffi python3-pytest gnupg
    - apt clean
  script:
  - cargo test

cargo-fmt:
  script:
    - rustup component add rustfmt
    - cargo fmt -- --check

cargo-clippy:
  before_script:
    - mkdir -p /run/user/$UID
    - apt update -y -qq
    - apt install -y -qq --no-install-recommends  git rustc cargo clang make pkg-config nettle-dev libssl-dev capnproto libsqlite3-dev ca-certificates valgrind strace python3-dev python3-setuptools python3-cffi python3-pytest gnupg
    - apt clean
  script:
    - rustup component add clippy
    - cargo clippy --verbose --tests -- -D warnings

pages:
  image: node:10
  stage: deploy
  before_script:
    - npm install gitbook-cli -g # install gitbook
    - gitbook fetch 3.2.3 # fetch final stable version
    - gitbook install # add any requested plugins in book.json
  script:
    - gitbook build doc/src/ public
  artifacts:
    paths:
      - public
  only:
    - master

build_docker:
  stage: deploy
  image: docker:stable
  services:
      - docker:stable-dind
  before_script:
    - docker info
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build  --cache-from $CI_REGISTRY_IMAGE:latest -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA -t $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest

    - docker pull $CI_REGISTRY_IMAGE/openpgp-ca-restd:latest || true
    - docker build  --cache-from $CI_REGISTRY_IMAGE/openpgp-ca-restd:latest -t $CI_REGISTRY_IMAGE/openpgp-ca-restd:$CI_COMMIT_SHA -t $CI_REGISTRY_IMAGE/openpgp-ca-restd:latest .
    - docker push $CI_REGISTRY_IMAGE/openpgp-ca-restd:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE/openpgp-ca-restd:latest

  needs: []
